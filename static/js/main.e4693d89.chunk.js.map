{"version":3,"sources":["components/total/Total.js","components/history/HistoryItem.js","components/history/History.js","components/operation/Operation.js","App.js","index.js"],"names":["Total","balance","allIncomeState","allExpensesState","className","HistoryItem","transaction","description","amount","add","History","transactions","map","item","key","id","Operation","addTransaction","addDescription","addAmount","onChange","type","placeholder","value","onClick","App","state","genUniqID","push","setState","calculate","e","target","Date","toString","this","sum","reduce","accum","getBalance","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4693d89.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Total = ({ balance, allIncomeState, allExpensesState }) => {\r\n    return(\r\n        <section className=\"total\">\r\n            <header className=\"total__header\">\r\n                <h3>Баланс</h3>\r\n                <p className=\"total__balance\">{balance} ₽</p>\r\n            </header>\r\n            <div className=\"total__main\">\r\n                <div className=\"total__main-item total__income\">\r\n                    <h4>Доходы</h4>\r\n                    <p className=\"total__money total__money-income\">\r\n                        +{allIncomeState} ₽\r\n                    </p>\r\n                </div>\r\n                <div className=\"total__main-item total__expenses\">\r\n                    <h4>Расходы</h4>\r\n                    <p className=\"total__money total__money-expenses\">\r\n                        -{allExpensesState} ₽\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Total;","import React from 'react';\r\n\r\nconst HistoryItem = ({transaction}) => {\r\n\r\n    const {description, amount, add} = transaction;\r\n    \r\n    return (\r\n        <>\r\n            <li className={`history__item ${add ? 'history__item-plus' : 'history__item-minus'}`}>{description}\r\n                <span className=\"history__money\">{`${add ? '+' : '-'}`}{amount} ₽</span>\r\n                <button className=\"history__delete\">x</button>\r\n            </li>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HistoryItem;","import React from 'react';\r\nimport HistoryItem from './HistoryItem';\r\n\r\nconst History = ({transactions}) => {\r\n\r\n    return(\r\n        <section className=\"history\">\r\n            <h3>История расходов</h3>\r\n            <ul className=\"history__list\">\r\n                {transactions.map(item => {\r\n                    return(\r\n                    <HistoryItem\r\n                        key={item.id}\r\n                        transaction={item}\r\n                    />\r\n                    )\r\n                })}\r\n            </ul>\r\n        </section>\r\n    );\r\n    \r\n}\r\n\r\nexport default History;","import React from 'react';\r\n\r\nconst Operation = ({ addTransaction, addDescription, addAmount, amount, description }) => {\r\n    return (\r\n        <section className=\"operation\">\r\n            <h3>Новая операция</h3>\r\n            <form id=\"form\">\r\n                <label>\r\n                    <input \r\n                        onChange={addDescription}\r\n                        type=\"text\" \r\n                        className=\"operation__fields operation__name\" \r\n                        placeholder=\"Наименование операции\" \r\n                        value={description}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <input \r\n                        onChange={addAmount}\r\n                        type=\"number\" \r\n                        className=\"operation__fields operation__amount\" \r\n                        placeholder=\"Введите сумму\" \r\n                        value={amount}\r\n                    />\r\n                </label>\r\n                <div className=\"operation__btns\">\r\n                    <button \r\n                        onClick={() => addTransaction(false)}\r\n                        type=\"button\" \r\n                        className=\"operation__btn operation__btn-subtract\"\r\n                    >РАСХОД</button>\r\n                    <button \r\n                        onClick={() => addTransaction(true)}\r\n                        type=\"button\" \r\n                        className=\"operation__btn operation__btn-add\"\r\n                    >ДОХОД</button>\r\n                </div>\r\n\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Operation;","import React, {Component} from 'react';\nimport './normalize.css';\nimport './style.css';\nimport Total from './components/total/Total';\nimport History from './components/history/History';\nimport Operation from './components/operation/Operation';\n\nclass App extends Component {\n    \n    /* Временное хранилище */ \n    state = {\n        transactions: [],\n        description: '',\n        amount: '',\n        allIncomeState: 0,\n        allExpensesState: 0,\n        balance: 0\n    }\n\n    /* Генератор уникального ID */\n    genUniqID() {\n        return `cmr${(+new Date).toString()}`;\n    }\n\n    /////// Домашка ////////\n\n    /* Баланс */\n    getBalance() {\n        const balance = this.state.allIncomeState - this.state.allExpensesState;\n        this.setState({\n            balance\n        });\n    }\n\n\n    calculate(type) {\n        /* \n        type === true - доходы\n        type === false - расходы\n        */\n\n        const sum = this.state.transactions.reduce((accum, item) => item.add === type ? accum + item.amount : accum, 0);\n        \n        if (type) {\n\n            this.setState({\n                allIncomeState: sum\n            }, this.getBalance);\n\n        } else {\n\n            this.setState({\n                allExpensesState: sum\n            }, this.getBalance);\n        \n        }\n\n    }\n\n    /////// Конец домашки ///////////\n\n\n    /* Добавление новых значений в хранилище */\n    addTransaction = (add) => {\n\n        /* Создание копии массива */\n        const transactions = [...this.state.transactions];\n\n        /* Формирование нового элемента объекта */\n        const transaction = {\n            id: this.genUniqID(),\n            description: this.state.description,\n            amount: +this.state.amount,\n            add\n        };\n\n        /* Добавление элемента в хранилище */\n        transactions.push(transaction);\n\n        /* Обновляем значение transactions. И очищаем description / amount */\n        this.setState({ \n            transactions,\n            description: '',\n            amount: '' \n        }, () => {\n            /* Обновление общей статистики, после того state обновится */\n            this.calculate(true);\n            this.calculate(false);\n        });\n\n\n    }\n\n    /* Обновление хранилище при вводе в поле инпут */\n    addAmount = (e) => {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    addDescription = (e) => {\n        this.setState({\n            description: e.target.value\n        });\n    }\n    /* ------------- */\n\n    \n\n\n\n    \n\n    render() {\n        return (\n            <>\n                <header>\n                    <h1>Кошелек</h1>\n                    <h2>Калькулятор расходов</h2>\n                </header>\n                <main>\n                    <div className=\"container\">\n                        <Total \n                            balance={this.state.balance}\n                            allIncomeState={this.state.allIncomeState}\n                            allExpensesState={this.state.allExpensesState}\n                        />\n                        <History \n                            transactions={this.state.transactions}\n                        />\n                        <Operation \n                            addTransaction={this.addTransaction}\n                            addAmount={this.addAmount}\n                            addDescription={this.addDescription}\n                            amount={this.state.amount}\n                            description={this.state.description}\n                        />\n                    </div>\n                </main>\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}